<!DOCTYPE html>
<html class="h-full" data-theme="true" data-theme-mode="light" dir="ltr" lang="en">

<head>
  <base href="/" />
  <title>Chanson Management</title>
  <meta charset="utf-8" />
  <meta content="follow, index" name="robots" />
  <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" />
  <meta content="Chanson Management" name="description" />
  <link href="assets/media/app/apple-touch-icon.png" rel="apple-touch-icon" sizes="180x180" />
  <link href="assets/media/app/favicon-32x32.png" rel="icon" sizes="32x32" type="image/png" />
  <link href="assets/media/app/favicon-16x16.png" rel="icon" sizes="16x16" type="image/png" />
  <link href="assets/media/app/favicon.ico" rel="shortcut icon" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap" rel="stylesheet" />

  <link href="assets/vendors/keenicons/styles.bundle.css" rel="stylesheet" />
  <link href="assets/css/app.css" rel="stylesheet" />


  <!-- 在 content 之前引入 axios -->
  <script src="assets/vendors/axios/axios.min.js"></script>
  <!-- 添加 axios 拦截器配置 -->
  <script>
    // 添加请求拦截器
    axios.interceptors.request.use(function (config) {
      // 从 localStorage 获取 token
      const token = localStorage.getItem('token')
      // 如果存在token，则添加到请求头中
      if (token) {
        config.headers.token = token
      }
      return config
    }, function (error) {
      return Promise.reject(error)
    })

  </script>
</head>

<body
  class="antialiased flex h-full text-base text-gray-700 [--tw-page-bg:#fefefe] [--tw-page-bg-dark:var(--tw-coal-500)] demo1 sidebar-fixed header-fixed bg-[--tw-page-bg] dark:bg-[--tw-page-bg-dark]">
  <!-- Theme Mode -->
  <script>
    const defaultThemeMode = 'light' // light|dark|system
    let themeMode

    if (document.documentElement) {
      if (localStorage.getItem('theme')) {
        themeMode = localStorage.getItem('theme')
      } else if (document.documentElement.hasAttribute('data-theme-mode')) {
        themeMode = document.documentElement.getAttribute('data-theme-mode')
      } else {
        themeMode = defaultThemeMode
      }

      if (themeMode === 'system') {
        themeMode = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
      }

      document.documentElement.classList.add(themeMode)
    }
  </script>
  <!-- End of Theme Mode -->
  <!-- Page -->
  <!-- Main -->
  <div class="flex grow">
    <!-- Sidebar -->

    <div
      class="sidebar dark:bg-coal-600 bg-light border-e border-e-gray-200 dark:border-e-coal-100 fixed z-20 hidden lg:flex flex-col items-stretch shrink-0"
      data-drawer="true" data-drawer-class="drawer drawer-start top-0 bottom-0" data-drawer-enable="true|lg:false"
      id="sidebar">
      <div class="sidebar-header hidden lg:flex items-center relative justify-between px-3 lg:px-6 shrink-0"
        id="sidebar_header">
        <a class="dark:hidden" href="admin/">
          <img class="default-logo min-h-[22px] max-w-none" src="assets/media/app/default-logo.svg">
          <img class="small-logo min-h-[22px] max-w-none" src="assets/media/app/mini-logo.svg">
        </a>
        <a class="hidden dark:block" href="admin/">
          <img class="default-logo min-h-[22px] max-w-none" src="assets/media/app/default-logo-dark.svg">
          <img class="small-logo min-h-[22px] max-w-none" src="assets/media/app/mini-logo.svg">
        </a>
        <button
          class="btn btn-icon btn-icon-md size-[30px] rounded-lg border border-gray-200 dark:border-gray-300 bg-light text-gray-500 hover:text-gray-700 toggle absolute start-full top-2/4 -translate-x-2/4 -translate-y-2/4 rtl:translate-x-2/4"
          data-toggle="body" data-toggle-class="sidebar-collapse" id="sidebar_toggle">
          <i
            class="ki-filled ki-black-left-line toggle-active:rotate-180 transition-all duration-300 rtl:translate rtl:rotate-180 rtl:toggle-active:rotate-0">
          </i>
        </button>
      </div>
      <div class="sidebar-content flex grow shrink-0 py-5 pe-2" id="sidebar_content">
        <div class="scrollable-y-hover grow shrink-0 flex ps-2 lg:ps-5 pe-1 lg:pe-3" data-scrollable="true"
          data-scrollable-dependencies="#sidebar_header" data-scrollable-height="auto" data-scrollable-offset="0px"
          data-scrollable-wrappers="#sidebar_content" id="sidebar_scrollable" style="height: 747px;">
          <!-- Sidebar Menu -->
          <div class="menu flex flex-col grow gap-0.5" data-menu="true" data-menu-accordion-expand-all="false"
            id="sidebar_menu">
            <div class="menu-item">
              <a class="menu-link border border-transparent items-center grow menu-item-active:bg-secondary-active dark:menu-item-active:bg-coal-300 dark:menu-item-active:border-gray-100 menu-item-active:rounded-lg hover:bg-secondary-active dark:hover:bg-coal-300 dark:hover:border-gray-100 hover:rounded-lg gap-[14px] ps-[10px] pe-[10px] py-[8px]"
                href="generator/tool" tabindex="0">
                <span class="menu-icon items-start text-gray-500 dark:text-gray-400 w-[20px]">
                  <i class="ki-filled ki-code text-lg"> </i>
                </span>
                <span
                  class="menu-title text-2sm font-normal text-gray-800 menu-item-active:text-primary menu-item-active:font-semibold menu-link-hover:!text-primary">
                  代码生成器
                </span>
              </a>
            </div>
          </div>
          <!-- End of Sidebar Menu -->
        </div>
      </div>
    </div>

    <div class="wrapper flex grow flex-col">
      <!-- Header -->
      <header
        class="header fixed top-0 z-10 start-0 end-0 flex items-stretch shrink-0 bg-[--tw-page-bg] dark:bg-[--tw-page-bg-dark]"
        data-sticky="true" data-sticky-class="shadow-sm" data-sticky-name="header" id="header">
        <!-- Container -->
        <div class="container-fixed flex justify-between items-stretch lg:gap-4" id="header_container">
          <!-- Mobile Logo -->
          <div class="flex gap-1 lg:hidden items-center -ms-1">
            <a class="shrink-0" href="admin/">
              <img class="max-h-[25px] w-full" src="assets/media/app/mini-logo.svg">
            </a>
            <div class="flex items-center">
              <button class="btn btn-icon btn-light btn-clear btn-sm" data-drawer-toggle="#sidebar">
                <i class="ki-filled ki-menu"> </i>
              </button>
              <button class="btn btn-icon btn-light btn-clear btn-sm" data-drawer-toggle="#mega_menu_wrapper">
                <i class="ki-filled ki-burger-menu-2"> </i>
              </button>
            </div>
          </div>
          <!-- End of Mobile Logo -->

        </div>
        <!-- End of Container -->
      </header>
      <!-- End of Header -->
      <!-- Content -->

      @!section('content')

      <!-- End of Content -->
      <!-- Footer -->
      <footer class="footer">
        <!-- Container -->
        <div class="container-fixed">
          <div class="flex flex-col md:flex-row justify-center md:justify-between items-center gap-3 py-5">
            <div class="flex order-2 md:order-1 gap-2 font-normal text-2sm">
              <span class="text-gray-500">
                2024©
              </span>
              <a class="text-gray-600 hover:text-primary" href="https://keenthemes.com">
                Keenthemes Inc.
              </a>
            </div>

          </div>
        </div>
        <!-- End of Container -->
      </footer>
      <!-- End of Footer -->
    </div>
    <!-- End of Wrapper -->
  </div>
  <!-- End of Main -->

  <!-- End of Page -->
  <!-- Scripts -->
  <script src="assets/js/core.bundle.js"></script>
  <!-- <script src="assets/vendors/apexcharts/apexcharts.min.js"></script> -->
  <script src="assets/js/widgets/general.js"></script>
  <script src="assets/js/layouts/demo1.js"></script>
  <script src="assets/js/dayjs.min.js"></script>
  <script src="assets/js/js.cookie.min.js"></script>
  <script src="assets/js/tools.js"></script>


  <!-- End of Scripts -->

  <script>
    // 局部声明需要使用的工具
    const { Util, dayjs, cookie } = window.Tools;

    // 在页面加载时
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        // 检查翻译是否需要更新
        const needUpdate = await Util.checkTranslationUpdate()
        if (needUpdate) {
          // 需要更新翻译
          await Util.updateTranslation()
        } else {
          // 不需要更新，直接设置翻译就绪状态
          Util.setTranslation()
        }


      } catch (error) {
        console.error('Failed to load translations:', error)
        // 处理错误情况
      }
    })

  </script>



</body>

</html>
