@layout('common/noauth_layouts')

@section('content')
<!-- Page -->
<style>
  .page-bg {
    background-image: url('assets/media/images/2600x1200/bg-10.png');
  }

  .dark .page-bg {
    background-image: url('assets/media/images/2600x1200/bg-10-dark.png');
  }
</style>
<div class="flex items-center justify-center grow bg-center bg-no-repeat page-bg">
  <div class="card max-w-[370px] w-full">
    <form action="#" class="card-body flex flex-col gap-5 p-10" id="sign_up_form" method="post">
      <!-- CSRF Token -->
      {{ csrfField() }}

      <div class="text-center mb-2.5">
        <h3 class="text-lg font-medium text-gray-900 leading-none mb-2.5">
          Sign up
        </h3>
        <div class="flex items-center justify-center">
          <span class="text-2sm text-gray-700 me-1.5">
            Already have an Account ?
          </span>
          <a class="text-2sm link" href="./admin/auth/sign-in">
            Sign In
          </a>
        </div>
      </div>

      <div class="flex flex-col gap-1">
        <label class="form-label text-gray-900">
          Nickname
        </label>
        <input class="input" name="nickname" placeholder="Enter Nick Name" type="text" value="" tabindex="1">
      </div>
      <div class="flex flex-col gap-1">
        <label class="form-label text-gray-900">
          Username
        </label>
        <input class="input" name="username" placeholder="Enter Login Name" type="text" value="" tabindex="2">
      </div>
      <div class="flex flex-col gap-1">
        <label class="form-label font-normal text-gray-900">
          Password
        </label>
        <div class="input" data-toggle-password="true">
          <input name="password" placeholder="Enter Password" type="password" value="" tabindex="3">
          <button class="btn btn-icon" data-toggle-password-trigger="true" type="button" tabindex="-1">
            <i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden">
            </i>
            <i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block">
            </i>
          </button>

        </div>
      </div>
      <div class="flex flex-col gap-1">
        <label class="form-label font-normal text-gray-900">
          Confirm Password
        </label>
        <div class="input" data-toggle-password="true">
          <input name="re_pwd" placeholder="Re-enter Password" type="password" value="" tabindex="4">
          <button class="btn btn-icon" data-toggle-password-trigger="true" type="button" tabindex="-1">
            <i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden">
            </i>
            <i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block">
            </i>
          </button>
        </div>
      </div>
      <label class="checkbox-group">
        <input class="checkbox checkbox-sm" name="terms" type="checkbox" value="1" tabindex="5">
        <span class="checkbox-label">
          I accept
          <a class="text-2sm link" href="#">
            Terms &amp; Conditions
          </a>
        </span>
      </label>
      <!-- Submit button with loading state -->
      <button type="submit" id="submit_btn" class="btn btn-primary flex justify-center grow" tabindex="6">
        <span class="indicator-label">Sign Up</span>
        <span class="indicator-progress hidden">
          <span
            class="animate-spin inline-block w-4 h-4 border-[2px] border-current border-t-transparent text-white rounded-full"
            role="status" aria-label="loading"></span>
        </span>
      </button>
    </form>
  </div>
</div>
<!-- End of Page -->
@endsection
<!-- script -->
@section('scripts')
<script>
  const form = document.getElementById('sign_up_form');
  const submitButton = document.getElementById('submit_btn');

  // 防止重复提交
  let isSubmitting = false;

  form.addEventListener('submit', async function (e) {
    e.preventDefault();

    if (isSubmitting || !validateForm()) return;

    // 显示加载状态
    submitButton.querySelector('.indicator-label').classList.add('hidden');
    submitButton.querySelector('.indicator-progress').classList.remove('hidden');
    submitButton.disabled = true;
    isSubmitting = true;

    try {
      const formData = new FormData(form);
      const response = await axios.post('/api/member/sign-up', Object.fromEntries(formData));
      if (response.data.code == 0) {
        showSuccessModal('注册成功！');
        window.location.href = '/admin/';
        return null;
      }
      throw new Error(response.data.msg);
    } catch (e) {
      showErrorModal(e.message || '发生错误，请稍后重试');
    } finally {
      // 恢复按钮状态
      submitButton.querySelector('.indicator-label').classList.remove('hidden');
      submitButton.querySelector('.indicator-progress').classList.add('hidden');
      submitButton.disabled = false;
      isSubmitting = false;
    }
  });

  // 表单验证
  function validateForm() {
    const nickname = form.querySelector('[name="nickname"]').value;
    const username = form.querySelector('[name="username"]').value;
    const password = form.querySelector('[name="password"]').value;
    const passwordConfirmation = form.querySelector('[name="re_pwd"]').value;
    const terms = form.querySelector('[name="terms"]').checked;

    if (!nickname) {
      showErrorModal('请输入昵称');
      return false;
    }

    if (!username) {
      showErrorModal('请输入邮箱');
      return false;
    }

    if (!password) {
      showErrorModal('请输入密码');
      return false;
    }

    if (password.length < 6) {
      showErrorModal('密码长度至少为6位');
      return false;
    }

    if (password !== passwordConfirmation) {
      showErrorModal('两次输入的密码不一致');
      return false;
    }

    if (!terms) {
      showErrorModal('请同意服务条款');
      return false;
    }

    return true;
  }

  // 验证邮箱格式
  function isValidEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  }

  // 显示成功提示
  function showSuccessModal(message) {
    alert(message);
  }

  // 显示错误提示
  function showErrorModal(message) {
    alert(message);
  }
</script>
@endsection
