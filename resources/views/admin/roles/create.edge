@layout('common/layouts')

@section('content')
<!-- Container -->
<main class="grow content pt-5" role="content">
  <div class="container-fixed">
    <div class="flex flex-wrap items-center lg:items-end justify-between gap-5 pb-7.5">
      <div class="flex flex-col justify-center gap-2">
        <h1 class="text-xl font-medium leading-none text-gray-900">
          {{ trans('create') }}
        </h1>
      </div>
      <div class="flex items-center gap-2.5">
        <button type="button" class="btn btn-sm btn-light" onclick="window.history.back()">
          {{ trans('back') }}
        </button>
        <button type="submit" class="btn btn-sm btn-primary" form="create_form" id="submit_btn">
          <span class="indicator-label">{{ trans('submit') }}</span>
          <span class="indicator-progress hidden">
            <span class="animate-spin inline-block w-4 h-4 border-[2px] border-current border-t-transparent text-white rounded-full" role="status" aria-label="loading"></span>
          </span>
        </button>
      </div>
    </div>
  </div>
  <div class="container-fixed">
    <div class="grid gap-5 lg:gap-7.5">
      <div class="card min-w-full">
        <div class="card-body">
          <form id="create_form" class="grid gap-5" method="POST">
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('主键ID') }}
                  </label>
                  <input id="id" name="id" class="input max-w-[300px]"
                    placeholder="{{ trans('主键ID') }}" type="text"
                    />
                </div>
              
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('角色名称') }}
                  </label>
                  <input id="role_name" name="role_name" class="input max-w-[300px]"
                    placeholder="{{ trans('角色名称') }}" type="text"
                    />
                </div>
              
            
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5 h-[400px] content-start">
                  <label class="form-label max-w-56">
                    {{ trans('描述') }}
                  </label>
                  <div class="grow h-[250px] max-w-[800px]">
                    <div id="description"></div>
                  </div>
                </div>
              
              
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('创建时间') }}
                  </label>
                  <input id="created_at" name="created_at" class="input max-w-[300px]"
                    placeholder="{{ trans('创建时间') }}" type="text"
                    />
                </div>
              
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('更新时间') }}
                  </label>
                  <input id="updated_at" name="updated_at" class="input max-w-[300px]"
                    placeholder="{{ trans('更新时间') }}" type="text"
                    />
                </div>
              
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('permission_count') }}
                  </label>
                  <input id="permission_count" name="permission_count" class="input max-w-[300px]"
                    placeholder="{{ trans('permission_count') }}" type="text"
                    />
                </div>
              
            
              
              
                <div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5">
                  <label class="form-label max-w-56">
                    {{ trans('member_count') }}
                  </label>
                  <input id="member_count" name="member_count" class="input max-w-[300px]"
                    placeholder="{{ trans('member_count') }}" type="text"
                    />
                </div>
              
            
          </form>
        </div>
      </div>
    </div>
  </div>
</main>
<!-- End of Container -->
@endsection

@section('scripts')
<script src="/assets/js/rich_editor/rich_editor.js"></script>
<script src="/assets/vendors/@form-validation/form-validation.bundle.js"></script>
<script>
  // 声明为全局变量
  
    
  
    
  
    
  var descriptionEditor;
    
  
    
  
    
  
    
  
    
  
  var validator;

  /**
   * 初始化表单验证
   */
  function initFormValidation() {
    const form = document.querySelector('#create_form');

    validator = FormValidation.formValidation(form, {
      fields: {
        
          
        id: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        role_name: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        description: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        created_at: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        updated_at: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        permission_count: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
          
        member_count: {
          validators: {
            notEmpty: {
              message: trans('please enter in the correct format')
            }
          }
        },
          
        
      },
      plugins: {
        trigger: new FormValidation.plugins.Trigger(),
        bootstrap: new FormValidation.plugins.Bootstrap5({
          rowSelector: '.flex',
          eleInvalidClass: 'border-red-500',
          eleValidClass: 'border-green-500',
          messageClass: 'text-gray-500'
        }),
        submitButton: new FormValidation.plugins.SubmitButton()
      }
    });

    return validator;
  }

  document.addEventListener('DOMContentLoaded', async function() {
    try {
      
        
      
        
      
        
      // 创建编辑器实例
      descriptionEditor = await new RichEditor('#description', 'simple');
        
      
        
      
        
      
        
      
        
      

      // 初始化表单验证
      validator = initFormValidation();

    } catch (error) {
      console.error('初始化失败:', error);
      Util.errorMsg(trans('please refresh the page and try again'));
    }
  });

  /**
   * 处理表单提交
   */
  Util.handleFormSubmit('#create_form', '#submit_btn', async (formData) => {
    try {
      // 进行表单验证
      const isValid = await validator.validate();
      if (isValid === 'Invalid') {
        throw new Error(trans('please check the form'));
      }

      
        
      
        
      
        
      // 获取富文本框内容并添加到表单数据
      if (descriptionEditor) {
        const content = descriptionEditor.getContents();
        formData.append('description', JSON.stringify(content));
      }
        
      
        
      
        
      
        
      
        
      

      const response = await axios.post('/api/roles/create-info', formData, {
        headers: {
          'token': localStorage.getItem('token')
        }
      });

      if (response.data.code === 0) {
        Util.successMsg(trans('operation success'), () => {
          window.location.href = '/admin/roles/list';
        });
        return response.data;
      } else {
        throw new Error(response.data.msg || trans('operation failed'));
      }
    } catch (error) {
      console.error(trans('operation failed') + ':', error);
      throw error;
    }
  });
</script>
@endsection
